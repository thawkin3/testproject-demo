{"version":3,"sources":["RequestForm.js","App.js","index.js"],"names":["RequestForm","useState","firstName","setFirstName","lastName","setLastName","email","setEmail","firstNameError","setFirstNameError","lastNameError","setLastNameError","emailError","setEmailError","submitted","setSubmitted","id","className","onSubmit","e","preventDefault","htmlFor","name","data-testid","value","onChange","target","type","App","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAGaA,EAAc,WAAO,IAAD,EACGC,mBAAS,IADZ,mBACxBC,EADwB,KACbC,EADa,OAECF,mBAAS,IAFV,mBAExBG,EAFwB,KAEdC,EAFc,OAGLJ,mBAAS,IAHJ,mBAGxBK,EAHwB,KAGjBC,EAHiB,OAiBaN,mBAAS,IAjBtB,mBAiBxBO,EAjBwB,KAiBRC,EAjBQ,OAkBWR,mBAAS,IAlBpB,mBAkBxBS,EAlBwB,KAkBTC,EAlBS,OAmBKV,mBAAS,IAnBd,mBAmBxBW,EAnBwB,KAmBZC,EAnBY,OAqBGZ,oBAAS,GArBZ,mBAqBxBa,EArBwB,KAqBbC,EArBa,KAmC/B,OAAOD,EACL,mBAAGE,GAAG,6BAAN,8DAIA,uBAAMC,UAAU,cAAcC,SAjBX,SAAAC,GACnBA,EAAEC,iBAEFX,EAAkBP,EAAY,GAAK,gCACnCS,EAAiBP,EAAW,GAAK,+BACjCS,EAAcP,EAAQ,GAAK,2BAEvBJ,GAAaE,GAAYE,GAC3BS,GAAa,IASf,UACE,sBAAKE,UAAS,mBAAcT,EAAiB,SAAW,IAAxD,UACE,uBAAOa,QAAQ,YAAf,wBACA,uBACEC,KAAK,YACLN,GAAG,YACHO,cAAY,YACZC,MAAOtB,EACPuB,SA3CsB,SAAAN,GAC5BhB,EAAagB,EAAEO,OAAOF,aA6CnBhB,GACC,mBAAGS,UAAU,eAAeD,GAAG,iBAA/B,SACGR,IAGL,sBAAKS,UAAS,mBAAcP,EAAgB,SAAW,IAAvD,UACE,uBAAOW,QAAQ,WAAf,uBACA,uBACEC,KAAK,WACLN,GAAG,WACHO,cAAY,WACZC,MAAOpB,EACPqB,SAtDqB,SAAAN,GAC3Bd,EAAYc,EAAEO,OAAOF,aAwDlBd,GACC,mBAAGO,UAAU,eAAeD,GAAG,gBAA/B,SACGN,IAGL,sBAAKO,UAAS,mBAAcL,EAAa,SAAW,IAApD,UACE,uBAAOS,QAAQ,QAAf,mBACA,uBACEM,KAAK,QACLL,KAAK,QACLN,GAAG,QACHO,cAAY,QACZC,MAAOlB,EACPmB,SAlEkB,SAAAN,GACxBZ,EAASY,EAAEO,OAAOF,aAoEfZ,GACC,mBAAGK,UAAU,eAAeD,GAAG,aAA/B,SACGJ,IAGL,wBAAQe,KAAK,SAASX,GAAG,cAAzB,8BCvFOY,EAAM,WACjB,OACE,iCACE,qEACA,sBAAKX,UAAU,eAAf,UACE,qGAGA,iDACmB,IACjB,mBAAGY,KAAK,+CAAR,mCAEK,IAJP,8DAK8D,IAC5D,mBAAGA,KAAK,uDAAR,4CANF,UAYF,cAAC,EAAD,QClBNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.63e8370c.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport './RequestForm.css'\n\nexport const RequestForm = () => {\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [email, setEmail] = useState('')\n\n  const handleFirstNameChange = e => {\n    setFirstName(e.target.value)\n  }\n\n  const handleLastNameChange = e => {\n    setLastName(e.target.value)\n  }\n\n  const handleEmailChange = e => {\n    setEmail(e.target.value)\n  }\n\n  const [firstNameError, setFirstNameError] = useState('')\n  const [lastNameError, setLastNameError] = useState('')\n  const [emailError, setEmailError] = useState('')\n\n  const [submitted, setSubmitted] = useState(false)\n\n  const handleSubmit = e => {\n    e.preventDefault()\n\n    setFirstNameError(firstName ? '' : 'First Name field is required')\n    setLastNameError(lastName ? '' : 'Last Name field is required')\n    setEmailError(email ? '' : 'Email field is required')\n\n    if (firstName && lastName && email) {\n      setSubmitted(true)\n    }\n  }\n\n  return submitted ? (\n    <p id=\"submissionConfirmationText\">\n      Thank you! We will be in touch with you shortly.\n    </p>\n  ) : (\n    <form className=\"requestForm\" onSubmit={handleSubmit}>\n      <div className={`formGroup${firstNameError ? ' error' : ''}`}>\n        <label htmlFor=\"firstName\">First Name</label>\n        <input\n          name=\"firstName\"\n          id=\"firstName\"\n          data-testid=\"firstName\"\n          value={firstName}\n          onChange={handleFirstNameChange}\n        />\n      </div>\n      {firstNameError && (\n        <p className=\"errorMessage\" id=\"firstNameError\">\n          {firstNameError}\n        </p>\n      )}\n      <div className={`formGroup${lastNameError ? ' error' : ''}`}>\n        <label htmlFor=\"lastName\">Last Name</label>\n        <input\n          name=\"lastName\"\n          id=\"lastName\"\n          data-testid=\"lastName\"\n          value={lastName}\n          onChange={handleLastNameChange}\n        />\n      </div>\n      {lastNameError && (\n        <p className=\"errorMessage\" id=\"lastNameError\">\n          {lastNameError}\n        </p>\n      )}\n      <div className={`formGroup${emailError ? ' error' : ''}`}>\n        <label htmlFor=\"email\">Email</label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          id=\"email\"\n          data-testid=\"email\"\n          value={email}\n          onChange={handleEmailChange}\n        />\n      </div>\n      {emailError && (\n        <p className=\"errorMessage\" id=\"emailError\">\n          {emailError}\n        </p>\n      )}\n      <button type=\"submit\" id=\"requestDemo\">\n        Request Demo\n      </button>\n    </form>\n  )\n}\n","import './App.css'\nimport { RequestForm } from './RequestForm'\n\nexport const App = () => {\n  return (\n    <main>\n      <h1>TestProject JavaScript OpenSDK Demo</h1>\n      <div className=\"introduction\">\n        <p>\n          Let's pretend that the form below is used to request a product demo.\n        </p>\n        <p>\n          You can find the{' '}\n          <a href=\"https://github.com/thawkin3/testproject-demo\">\n            source code on GitHub\n          </a>{' '}\n          to view the end-to-end tests written for this app using the{' '}\n          <a href=\"https://github.com/testproject-io/javascript-opensdk\">\n            TestProject JavaScript OpenSDK\n          </a>\n          .\n        </p>\n      </div>\n      <RequestForm />\n    </main>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { App } from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}